/*
 * Copyright 2017 Zhihu Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation('com.github.chrisbanes:PhotoView:2.1.4') {
        exclude group: 'com.android.support'
    }
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    compileOnly('com.github.bumptech.glide:glide:4.10.0') {
        exclude group: 'com.android.support'
    }
    compileOnly('com.squareup.picasso:picasso:2.71828') {
        exclude group:'com.android.support'
    }
}

// jcenter configuration for novoda's bintray-release
// $ ./gradlew clean build bintrayUpload -PbintrayUser=BINTRAY_USERNAME -PbintrayKey=BINTRAY_KEY -PdryRun=false
//publish {
//    userOrg = 'zhihu'
//    groupId = 'com.zhihu.android'
//    artifactId = 'matisse'
//    publishVersion = '0.5.3-beta3'
//    desc = 'A well-designed local image selector for Android'
//    website = 'https://www.zhihu.com/'
//}

checkstyle {
    toolVersion = '7.6.1'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}

task checkstyle(type:Checkstyle) {
    description 'Runs Checkstyle inspection against matisse sourcesets.'
    group = 'Code Quality'
    configFile rootProject.file('checkstyle.xml')
    ignoreFailures = false
    showViolations true
    classpath = files()
    source 'src/main/java'
}
